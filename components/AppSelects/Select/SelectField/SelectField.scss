@use '@/assets/variables.scss' as variables;
@use '@/assets/mixins.scss' as mixins;

.select {
    .select__active-option {
        top: 0px;
        overflow: hidden;
        position: absolute;
        white-space: nowrap;
        padding: 10px 15px 10px 15px;
        @include mixins.elemResolutionOptions(calc(100% - 30px), 40px);
        @include mixins.flexBlock($vertical: center, $horizontal: flex-start, $gap: 5px);
    }
    
    .select__active-option-tab {
        white-space: nowrap;
        padding: 5px 5px 5px 10px;
        background-color: variables.$color-hover;
        @include mixins.elemResolutionOptions(min-content, 36px);
        @include mixins.borderOptions(1px, solid, variables.$color-active, 5px);
        @include mixins.flexBlock($vertical: center, $horizontal: flex-start, $gap: 5px);
    }

    .form-item__value_multiply {
        display: flex;
        align-items: center;
        gap: 5px;

        .select__active-option-tab {
            padding: 5px 10px;
            border: none;
        }
    }
}

.select__popup {
    &[open] {
        input[disabled] {
            opacity: 1;
            @include mixins.borderOptions(1px, solid, variables.$color-local-red, 5px);
        }

        .form-item__substring {
            &::after {
                transform: rotate(180deg);
            }
        }

        .select__active-option {
            filter: opacity(0.5);
        }        

        &.select__popup_multiply {
            .popup__summary {
                @include mixins.borderOptions(1px, solid, variables.$color-local-red, 5px);
            }

            .select__active-option {
                filter: opacity(1);
            }     
        }

        .popup__content {
            margin-top: 5px;
        }
    }

    &.select__popup_multiply {
        .popup__summary {
            @include mixins.borderOptions(1px, solid, variables.$color-grey, 5px);
        }
    
        .select__active-option {
            padding: 10px 15px 10px 2px;
        }
    
        .form-item__input {
            display: flex;
            flex-wrap: wrap-reverse;
            justify-content: flex-end;
            flex-direction: row-reverse;
    
            input {
                opacity: 0;
                border: none;
                padding: 10px 0px;
                position: absolute;
                background: transparent;
            }
    
            .active-option__mirror {
                position: relative;
    
                input {
                    top: 0px;
                    opacity: 1;
                    height: 36px;
                    padding: 10px;
                    min-width: 40px;
                    pointer-events: none;
                }
            }
        }
    
        .select__active-option {
            height: auto;
            flex-wrap: wrap;
            overflow: visible;
            position: relative;
            padding: 2px 5px 2px 2px;
            width: calc(100% - 30px);
    
            .form-item__mirror {
                opacity: 0;
                height: 36px;
                padding: 10px;
                display: flex;
                min-width: 40px;
                align-items: center;
            }
        }
    }

    .popup__summary {
        width: 100%;
        border-radius: 5px;
        background: variables.$color-white;
        @include mixins.flexBlock($vertical: center, $horizontal: flex-start, $gap: 10px);

        .form-item__input {
            width: 100%;
            overflow: hidden;
            min-width: 120px;

            .form-item__substring {
                top: 9px;
                right: 10px;
                color: variables.$color-grey;
                @include mixins.flexBlock($vertical: center, $horizontal: flex-start, $gap: 10px);

                &::after {
                    content: url('/icons/arrow.svg');
                }
            }

            & > input {
                padding: 10px 30px 10px 15px;
            }
        }

        .icon__delete {
            svg {
                * {
                    fill: #666
                }
            }

            &:hover {
                svg {
                    * {
                        fill: variables.$color-active;
                    }
                }
            }
        }
    }

    .popup__content {
        width: 100%;
        top: auto;
    }
}

