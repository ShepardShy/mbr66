@use '@/assets/variables.scss' as variables;
@use '@/assets/mixins.scss' as mixins;

button {
    font-size: variables.$font-size-default;
    transition: 0.2s;
    padding: 10px 15px;
    border-radius: 5px;
    background: #F0F0F0;
    outline: none;

    &:disabled {
        cursor: not-allowed;

        &.button_blue {
            background: variables.$color-blue;
        }
    }

    &:hover {
        filter: brightness(0.95)
    }

    &.button_blue {
        background: variables.$color-blue;
        color: variables.$color-white;

        svg {
            * {
                fill: variables.$color-white;
            }
        }
    }

    &.button_white {
        background: variables.$color-white;
        border: 1px solid variables.$color-light-grey;
        box-shadow: 0 5px 20px variables.$color-light-grey;
    }

    &.button_orange {
        background: variables.$color-orange;
        color: variables.$color-white;

        &.button_loading  {
            &::after {
                border: 4px solid variables.$color-white;
                border-top-color: variables.$color-orange;
            }
        }
    }

    &.button_non-background {
        background: none;
        color: variables.$color-dark-grey;
    }

    &.button_add {
        padding: 9px 14px 9px 14px;
        @include mixins.flexBlock($vertical: center, $gap: 7px);

        &::before {
            content: url('/icons/plus.svg')
        }
    }

    &.button_red {
        background: variables.$color-red;;
        color: variables.$color-white;

        svg {
            path {
                fill: variables.$color-white
            }
        }
    }

    &.button_loading {
        position: relative;
        cursor: not-allowed;

        &::after {
            content: "";
            position: absolute;
            width: 16px;
            height: 16px;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            margin: auto;
            border: 4px solid #2f8cff;
            border-top-color: variables.$color-white;
            border-radius: 50%;
            animation: button-loading-spinner 1s ease infinite;
        }

        &::before {
            content: none;
        }

        &:hover {
            opacity: 0.9;
        }

        &.button_blue {
            &::after {
                border: 4px solid variables.$color-white;
                border-top-color: transparent;
              }
        }

        span {
            visibility: hidden;
        }
    }
}


@media (max-width: 648px) {
    section {
        button {
            &.button_mobile {
                min-width: 31px;
                @include mixins.elemResolutionOptions(31px, 35px);
                @include mixins.gridCenter();
                font-size: 0px;
                padding: 0px;
                justify-self: end;

                span {
                    display: none;
                }
            }
        }
    }
}

@keyframes button-loading-spinner {
    from {
      transform: rotate(0turn);
    }

    to {
      transform: rotate(1turn);
    }
  }
