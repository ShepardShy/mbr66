@use '@/assets/variables.scss' as variables;
@use '@/assets/mixins.scss' as mixins;

/*Обнуление*/
*,
b::before,
*::after {
    padding: 0;
    margin: 0;
    border: 0;
    box-sizing: border-box;
}

a {
    text-decoration: none;
    color: variables.$color-black;
}

ul,
ol,
li {
    list-style: none;
}

img {
    vertical-align: top;
}

button {
    cursor: pointer;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-weight: inherit;
}

html,
body {
    line-height: normal;
    font-size: variables.$font-size-default;
    color: variables.$color-black;
    font-family: Montserrat;
    overflow-x: hidden;

    &.body_uncscroll {
        overflow: hidden;
    }

    &.body__unselected {
        * {
            @include mixins.userSelect($value: none);
        }
    }

    .fancybox__backdrop {
        background: variables.$color-warning-background;
    }
}

html {
    body {
        background-color: variables.$color-white;
    }
}

body.body__cursor-style {
    *, input, div, span, td, th, tr, thead, tbody, button, select {
        cursor: var(--cursorStyle) !important;
        @include mixins.userSelect($value: none);

        &:hover {
            cursor: var(--cursorStyle) !important;
        }
    }
}

#__nuxt {
    height: 100%;
}

.grabbing * {
    cursor: grabbing !important;
}

/* ------------------------------------------------------------------------------------ */

/*Класс для того, чтобы не было скролла по иксу */
.wrapper {
    height: 100%;
    min-height: 100%;
}

.v-binder-follower-container {
    .v-binder-follower-content {
        min-width: 200px !important;

        &.v-binder-follower-content_up {
            bottom: 40px;
        }

        * {
            transition: none;
        }
    }
}

.content_draggable {
    * {
        background: transparent !important;
    }
}

.item_required {
    .table__item-content_title,
    .table__item-content .form-item__title {
        position: relative;

        &::after {
            content: url('/icons/new/require.svg');
            bottom: 5px;
            position: absolute;
            color: variables.$color-red;
        }
    }
}

.clone-elem {
    position: absolute !important;
    top: -10000px !important;
    left: -10000px !important;

    &.table {
        background: variables.$color-white;
    }

    .icon__draggable {
        display: block !important;
    }
}

.container {
    /*Пишется max-width*/
    max-width: 1380px;
    // max-width: 1525px;
    margin: 0 auto;
    /*Избегание прилипания к краю*/
    padding: 20px;
    width: 100%;
    box-sizing: content-box;
}

/*фоновое изображение*/
.ibg {
    position: relative;
}

.ibg img {
    position: absolute;
    top: 0;
    left: 0;
    @include mixins.elemResolutionOptions(100%, 100%);
    object-fit: cover;
}

.svg__matrix {
    display: none;
}

main {
    height: 100%;
}

.page {
    display: grid;
    grid-template-rows: auto 1fr auto;
    min-height: 100vh;
    height: 100%;
    background-color: variables.$color-white;
}

.stickyBlock {
    position: relative;
    z-index: 1000;
}

input, textarea {
    width: 100%;
    resize: none;
    outline: none;
    min-height: 40px;
    padding: 10px 15px;
    font-family: inherit;
    box-shadow: none !important;
    font-size: variables.$font-size-default;
    background-color: variables.$color-white;
    caret-color: variables.$color-black !important;
    @include mixins.elemResolutionOptions(100%, 40px);
    @include mixins.borderOptions(1px, solid,  variables.$color-grey, 5px);

    &:focus {
        border: 1px solid variables.$color-blue
    }

    &::-webkit-credentials-destruction-view-button {
        display: none !important;
    }

    &[disabled] {
        opacity: 0.6;
    }

    &::-webkit-outer-spin-button,
    &::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }
}

details {
    summary {
        outline: none;
        list-style: none;
        @include mixins.flexBlock($vertical: center, $horizontal: space-between);

        &::-webkit-details-marker {
            display: none;
        }

        &::after {
            content:  none;
        }
    }

    &[open] {
        summary::after {
            content: none;
        }
    }
}


.page__header {
    margin-bottom: 25px;
    @include mixins.flexBlock($vertical: center, $gap: 25px);
}

.page__content {
    display: grid;
}

.form__item_select-details {
    user-select: none;

    &[open] {
        summary {
            border-color: variables.$color-blue;

            svg {
                transform: rotate(180deg);

                path {
                    stroke: variables.$color-active;
                }
            }
        }
    }

    summary {
        resize: none;
        padding: 10px;
        outline: none;
        cursor: pointer;
        font-size: variables.$font-size-default;
        overflow: hidden;
        min-height: 40px;
        transition: 0.2s all;
        background-color: variables.$color-white;
        @include mixins.elemResolutionOptions(100%, 39px);
        @include mixins.borderOptions(1px, solid, variables.$color-grey, 5px);
        @include mixins.flexBlock($horizontal: space-between, $gap: 5px);

        .select__value {
            @include mixins.textHidden()
        }

        svg {
            min-width: 14px;
            min-height: 8px;
        }
    }

    .select__options {
        top: 67px;
        z-index: 2;
        min-width: 200px;
        position: absolute;
        border-radius: 5px;
        max-height: 590px;
        overflow-x: hidden;
        overflow-y: auto;
        width: calc(100% - 30px);
        background-color: variables.$color-white;
        @include mixins.userSelect($value: none);
        box-shadow: 0 0 3px variables.$color-black, inset 0 1px 2px rgba(255,255,255,.5);
    }

    .select__option {
        cursor: pointer;
        padding: 8px 20px 8px 10px;
        @include mixins.flexBlock($gap: 5px);

        &:hover {
            background: variables.$color-hover;
        }
    }
}

.table-mobile__section {
    .form__item_select-details {
        position: relative;

        .select__options {
            top: 45px;
            width: 100%;
        }
    }

    .table__item_details {
        position: relative;

        .select__options {
            top: 35px;
            width: 100%;
        }
    }
}

.sortable-ghost {
    cursor: grabbing !important;
}

.sortable-drag {
    cursor: grabbing !important;
}

.fancybox__footer {
    z-index: 1000;

    .f-thumbs__track {
        margin: 0 auto;
        transform: none !important;
        gap: 10px;
    }

    .f-thumbs.is-horizontal {
        .f-thumbs__slide {
            clip-path: none;
            min-width: 48px;
            transform: none;
            @include mixins.elemResolutionOptions(48px, 48px);
        }
    }

    .is-modern {
        .f-thumbs__slide {
            & > * {
                clip-path: none;
            }

            .f-thumbs__slide__button {
                width: 100%;
                border-radius: 5px;
                background: variables.$color-white;
                border: 1px solid variables.$color-grey;

                img {
                    object-fit: cover;
                }
            }
        }
    }
}

.v-binder-follower-content {
    border-radius: 5px;
}

.v-vl-items {
    padding: 0px !important;
}

.table__item-img {
    min-width: 25px;
    border-radius: 5px;
    background: var(--table__item-rect);
    @include mixins.elemResolutionOptions(25px, 25px);

    img {
        object-fit: contain;
        border-radius: 5px;
    }
}
summary {
    .table__item-img {
        border-radius: 5px 0px 0px 5px;

        figcaption {
            right: -16px;
            background: variables.$color-white;
            position: absolute;
            @include mixins.gridCenter();
            @include mixins.elemResolutionOptions(16px, 100%);
            @include mixins.borderOptions(1px, solid, variables.$color-grey, 0px 5px 5px 0px);
        }
    }
}

.field_error {
    .form__item {
        input {
            border: 1px solid variables.$color-light-red;
        }
    }
}

.Toastify {
    .Toastify__toast-container {
        max-width: 290px;
        padding: 0;

        &.Toastify__toast-container--top-right {
            right: 25px;
            top: 25px;
        }

        .Toastify__toast {
            border-radius: 5px;
            background-color: rgba(27, 39, 52, 75%);
            color: variables.$color-white;
            padding: 10px 15px 15px 15px;
            margin-bottom: 5px;
            min-height: 65px;
            transition: 0.2s ease;

            &:hover {
                background-color: rgba(27, 39, 52, 75%) !important;
            }

            .Toastify__toast-body {
                margin: 0;
                padding: 0;
                align-items: flex-start;
                white-space: unset;
                font-size: 14px;
                font-family: 'MyriadPro', sans-serif;

                .Toastify__toast-title {
                    margin-bottom: 10px;
                    font-weight: 600;
                }

                .Toastify__toast-description {
                    max-width: 241px;
                    overflow-wrap: break-word;
                    word-break: break-word;
                }
            }

            .Toastify__close-button {
                color: variables.$color-white;
                opacity: 1;
            }

            .Toastify__toast-icon {
                display: none;
            }

            @for $i from 1 through 15 {
                &:nth-child(#{$i}) {
                    background-color: rgba(27, 39, 52, 80% - $i * 5%);
                }
            }
        }
    }
}


.h-editable {
    * {
        font-family: Montserrat;
    }

    .textarea {
        textarea, .textarea__mirror {
            padding: 0px;
            border: none;
            min-height: auto;
        }

        textarea {
            background: transparent;
            color:variables.$color-black;
            line-height: normal; 
        }

        .textarea__mirror {
            top: 0px;
            opacity: 0;
            line-height: normal;
        }
    }

    .icon__edit {
        display: inline;
        cursor: pointer;

        svg {
            @include mixins.elemResolutionOptions(18px, 18px);

            * {
                fill: variables.$color-grey;
            }
        }
    }
}